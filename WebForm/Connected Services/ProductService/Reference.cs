//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.ProductService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.ProductServiceSoap")]
    public interface ProductServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductbyId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetProductbyId(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductbyId", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProductbyIdAsync(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddProduct(string name, int price, string thumnail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddProductAsync(string name, int price, string thumnail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProductServiceSoapChannel : WebForm.ProductService.ProductServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceSoapClient : System.ServiceModel.ClientBase<WebForm.ProductService.ProductServiceSoap>, WebForm.ProductService.ProductServiceSoap {
        
        public ProductServiceSoapClient() {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetProduct() {
            return base.Channel.GetProduct();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProductAsync() {
            return base.Channel.GetProductAsync();
        }
        
        public System.Data.DataTable GetProductbyId(string productId) {
            return base.Channel.GetProductbyId(productId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProductbyIdAsync(string productId) {
            return base.Channel.GetProductbyIdAsync(productId);
        }
        
        public bool AddProduct(string name, int price, string thumnail) {
            return base.Channel.AddProduct(name, price, thumnail);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(string name, int price, string thumnail) {
            return base.Channel.AddProductAsync(name, price, thumnail);
        }
    }
}
